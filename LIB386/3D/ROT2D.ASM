;*様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様*

		.386p

		.model SMALL, SYSCALL

;*様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様*

		.DATA

;*様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様*

		extrn	SYSCALL	Chooser_RtnI:DWORD
		extrn	SYSCALL	Chooser_RtnF:DWORD
		extrn	SYSCALL	Chooser_RtnM:DWORD
		extrn	SYSCALL	Chooser_Result:DWORD

;*様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様*

		public	SYSCALL	Rotate

Rotate	dd	offset RotateInit

;*様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様*

		.CODE

;*様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様*

		extrn	SYSCALL	RotateI:PROC
		extrn	SYSCALL	LongRotateF:PROC
		extrn	SYSCALL	RotateM:PROC

;*様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様*

		extrn	SYSCALL	Chooser:PROC

;*様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様*
;void	Rotate(S32 x, S32 z, S32 angle)	;

;#pragma	aux	Rotate			\
;	parm		[eax] [ecx] [edx]	\
;	modify		[ebx esi edi]

RotateInit	proc

		mov	[Chooser_RtnI], offset RotateI		; Integer
		mov	[Chooser_RtnF], offset LongRotateF	; FPU
		mov	[Chooser_RtnM], offset RotateM		; MMX
		mov	[Chooser_Result], offset Rotate		; Pointer
		jmp	Chooser

RotateInit	endp

;*様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様様*
;		The
		END
